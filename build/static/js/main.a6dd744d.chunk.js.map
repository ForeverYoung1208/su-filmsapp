{"version":3,"sources":["shared/components/Footer/Footer.js","shared/components/ErrorBoundary/ErrorBoundary.js","shared/components/Input/Input.js","shared/components/Button/Button.js","shared/components/NavBar/NavBar.js","store/actions/auth.js","store/actionTypes.js","shared/components/Toolbar/Toolbar.js","shared/components/Loader/Loader.js","shared/components/Backdrop/Backdrop.js","shared/components/Layout/Layout.js","pages/Home/Home.js","shared/components/Tooltip/Tooltip.js","pages/FullMovie/SimilarMovies/SimilarMovies.js","shared/utils/axiosInstances.js","pages/FullMovie/FullMovie.js","pages/Profile/Profile.js","shared/utils/validation.js","pages/Auth/Auth.js","pages/PageNotFound/PageNotFound.js","shared/components/Pagination/Pagination.js","pages/FavoriteMovies/FavoriteMovies.js","store/actions/favoriteMovies.js","App.js","store/reducers/profile.js","store/reducers/favoriteMovies.js","store/reducers/auth.js","store/rootReducer.js","serviceWorker.js","index.js"],"names":["Footer","className","Date","getFullYear","ErrorBoundary","state","error","this","children","props","name","message","href","Component","Input","type","label","wrapperClassName","value","onChange","onBlur","onKeyDown","uniqueId","uuid","classNames","htmlFor","id","autoComplete","memo","isDisabled","onClick","console","log","disabled","links","url","title","exact","NavBar","logoutUser","map","key","to","activeClassName","authenticateUser","idToken","localId","databaseKey","localStorage","setItem","connect","isAuthenticated","auth","removeItem","search","isFetching","onChangeInput","searchMovies","toolbarClasses","push","join","e","Loader","toPortal","loaderClasses","createPortal","document","getElementById","Backdrop","Layout","Home","movies","content","length","original_title","poster_path","style","backgroundImage","Tooltip","effect","place","tooltipClass","tooltipClasses","data-tip","data-for","data-effect","data-place","data-class","data-delay-hide","SimilarMovies","src","alt","axiosAuth","create","baseURL","axiosDB","axiosMovies","API_KEY","FullMovie","fullMovie","similarMovies","manageFavoriteMovie","addMovieToFavorite","removeMovieFromFavorite","favoriteMovie","favoriteMovies","find","m","databaseId","match","movieId","params","fetchSimilarMovies","then","setState","catch","get","response","data","prevProps","prevMovieId","results","slice","backdrop_path","release_date","overview","isFavorite","some","btnClasses","useState","firstName","setFirstName","lastName","setLastName","age","setAge","useEffect","onChangeHandler","target","onSubmitHandler","useCallback","preventDefault","validation","isAlphabetic","pattern","test","isNumeric","isEmail","minLength","minValue","FIREBASE_KEY","SIGN_IN","SIGN_UP","SIGN_IN_FIELDS","SIGN_UP_FIELDS","initialState","mode","errors","validationRules","email","password","confirmPassword","Auth","onBlurHandler","validate","user","returnSecureToken","post","displayName","userData","updatedUserData","switchModeHandler","newMode","field","ruleName","ruleValue","errorMessage","validationFunction","trim","fieldKeys","isValid","fieldKey","authMode","tabClasses","noValidate","onSubmit","i","formIsInvalid","PageNotFound","Pagination","current","total","numbers","max","Math","ceil","maxCount","n","FavoriteMovies","currentPage","setCurrentPage","page","saveFavoriteMovies","App","onChangeInputHandler","fetchMovies","query","afterSuccessfulFetch","setTimeout","finally","history","fetchFavoriteMovies","getItem","path","component","render","Profile","from","PureComponent","dispatch","Object","entries","movieData","movie","getState","addMovieToStore","delete","removeMovieFromStore","withRouter","userName","userAge","changeUserName","payload","newName","reducer","action","filter","combineReducers","profile","profileReducer","favoriteMoviesReducer","authReducer","Boolean","window","location","hostname","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a6dd744d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Footer.scss';\r\n\r\nconst Footer = () => (\r\n    <footer className=\"footer\">\r\n        <div className=\"footer__wrapper\">\r\n            <strong className=\"footer__copyright\">\r\n                All Rights Reserved, {new Date().getFullYear()}\r\n            </strong>\r\n        </div>\r\n    </footer>\r\n);\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\nimport PT from 'prop-types';\r\n\r\nimport Footer from '../Footer/Footer';\r\nimport './ErrorBoundary.scss';\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: null\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n        return { error };\r\n    }\r\n\r\n    render() {\r\n        const { error } = this.state;\r\n        const { children } = this.props;\r\n\r\n        if (!error) return children;\r\n\r\n        const { name, message } = error;\r\n\r\n        return (\r\n            <div className=\"error-boundary\">\r\n                <div className=\"error-boundary__content\">\r\n                    <div className=\"error-boundary__body\">\r\n                        <div className=\"error-boundary__top\">\r\n                            <h1 className=\"error-boundary__title\">{name}</h1>\r\n                            <i className=\"fas fa-bug error-boundary__icon\" />\r\n                        </div>\r\n                        \r\n                        <p className=\"error-boundary__text\">{message}</p>\r\n\r\n                        <a href=\"/\" className=\"error-boundary__link\">\r\n                            Return to previous page\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nErrorBoundary.propTypes = {\r\n    children: PT.oneOfType([\r\n        PT.object,\r\n        PT.arrayOf(PT.object),\r\n        PT.bool\r\n    ]).isRequired\r\n};\r\n\r\nexport default ErrorBoundary;\r\n","import React from 'react';\r\nimport PT from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { v1 as uuid } from 'uuid';\r\n\r\nimport './Input.scss';\r\n\r\nconst Input = ({\r\n    type = 'text',\r\n    name,\r\n    label,\r\n    wrapperClassName,\r\n    className,\r\n    value,\r\n    onChange,\r\n    onBlur,\r\n    onKeyDown\r\n}) => {\r\n    const uniqueId = uuid();\r\n\r\n    return (\r\n        <div className={classNames('input-wrapper', {\r\n            [wrapperClassName]: wrapperClassName\r\n        })}>\r\n            <label\r\n                htmlFor={uniqueId}\r\n                className={classNames('input-wrapper__label', {\r\n                   'input-wrapper__label--top': value \r\n                })}\r\n            >\r\n                {label}    \r\n            </label>\r\n    \r\n            <input\r\n                id={uniqueId}\r\n                type={type}\r\n                name={name}\r\n                className={classNames('input-wrapper__input', {\r\n                    [className]: className\r\n                })}\r\n                autoComplete=\"off\"\r\n                value={value}\r\n                onChange={onChange}\r\n                onBlur={onBlur}\r\n                onKeyDown={onKeyDown}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nInput.propTypes = {\r\n    type: PT.oneOf(['text', 'email', 'number', 'password']),\r\n    name: PT.string,\r\n    label: PT.string,\r\n    wrapperClassName: PT.string,\r\n    className: PT.string,\r\n    value: PT.oneOfType([\r\n        PT.string,\r\n        PT.number\r\n    ]).isRequired,\r\n    onChange: PT.func.isRequired,\r\n    onBlur: PT.func,\r\n    onKeyDown: PT.func\r\n};\r\n\r\nexport default Input;\r\n","import React, { memo } from 'react';\r\nimport PT from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport './Button.scss';\r\n\r\nconst Button = ({\r\n    type = 'button',\r\n    className,\r\n    isDisabled = false,\r\n    onClick,\r\n    children\r\n}) => {\r\n    console.log(\"RENDER...\");\r\n\r\n    return (\r\n        <button\r\n            type={type}\r\n            className={classNames('button', {\r\n                [className]: className\r\n            })}\r\n            disabled={isDisabled}\r\n            onClick={onClick}\r\n        >\r\n            {children}\r\n        </button>\r\n    );\r\n};\r\n\r\nButton.propTypes = {\r\n    type: PT.oneOf(['button', 'submit']),\r\n    className: PT.string,\r\n    isDisabled: PT.bool,\r\n    onClick: PT.func,\r\n    children: PT.oneOfType([\r\n        PT.string,\r\n        PT.number,\r\n        PT.object,\r\n        PT.arrayOf(PT.object)\r\n    ]).isRequired\r\n};\r\n\r\nexport default memo(Button);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport PT from 'prop-types';\r\n\r\nimport './NavBar.scss';\r\n\r\nconst links = [\r\n    {\r\n        id: 1,\r\n        url: '/',\r\n        title: 'Home',\r\n        exact: true\r\n    },\r\n    {\r\n        id: 2,\r\n        url: '/favorite-movies',\r\n        title: 'Favorite Movies'\r\n    },\r\n    {\r\n        id: 3,\r\n        url: '/profile',\r\n        title: 'Profile'\r\n    },\r\n    {\r\n        id: 4,\r\n        title: 'Logout'\r\n    }\r\n];\r\n\r\nconst NavBar = ({ logoutUser }) => (\r\n    <nav className=\"navbar\">\r\n        <ul className=\"navbar__list\">\r\n            {links.map(({ id, url, title, exact }) => {\r\n                if (!url) {\r\n                    return (\r\n                        <li key={id} className=\"navbar__list-item\">\r\n                            <span\r\n                                className=\"navbar__link\"\r\n                                onClick={logoutUser}\r\n                            >\r\n                                {title}\r\n                            </span>\r\n                        </li>\r\n                    );\r\n                }\r\n\r\n                return  (\r\n                    <li key={id} className=\"navbar__list-item\">\r\n                        <NavLink\r\n                            to={url}\r\n                            exact={exact}\r\n                            className=\"navbar__link\"\r\n                            activeClassName=\"navbar__link--active\"\r\n                        >\r\n                            {title}\r\n                        </NavLink>\r\n                    </li>\r\n                );\r\n            })}\r\n        </ul>\r\n    </nav>\r\n);\r\n\r\nNavBar.propTypes = {\r\n    logoutUser: PT.func.isRequired\r\n};\r\n\r\nexport default NavBar;\r\n","import { AUTHENTICATE_USER, LOGOUT_USER } from '../actionTypes';\r\n\r\nexport const authenticateUser = (idToken, localId, databaseKey) => {\r\n    localStorage.setItem('idToken', idToken);\r\n    localStorage.setItem('localId', localId);\r\n    localStorage.setItem('databaseKey', databaseKey);\r\n\r\n    return {\r\n        type: AUTHENTICATE_USER,\r\n        idToken,\r\n        localId,\r\n        databaseKey\r\n    };\r\n};\r\n\r\nexport const logoutUser = () => {\r\n    localStorage.removeItem('idToken');\r\n    localStorage.removeItem('localId');\r\n    localStorage.removeItem('databaseKey');\r\n\r\n    return {\r\n        type: LOGOUT_USER\r\n    };\r\n};\r\n","// auth\r\nexport const AUTHENTICATE_USER = '[auth] AUTHENTICATE_USER';\r\nexport const LOGOUT_USER = '[auth] LOGOUT_USER';\r\n\r\n// profile\r\nexport const CHANGE_USER_NAME = '[profile] CHANGE_USER_NAME';\r\n\r\n// favorite movies\r\nexport const SAVE_FAVORITE_MOVIES = '[favorite movies] SAVE_FAVORITE_MOVIES';\r\nexport const ADD_MOVIE_TO_FAVORITE = '[favorite movies] ADD_MOVIE_TO_FAVORITE';\r\nexport const REMOVE_MOVIE_FROM_FAVORITE = '[favorite movies] REMOVE_MOVIE_FROM_FAVORITE';\r\n","import React from 'react';\r\nimport PT from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Input from '../Input/Input';\r\nimport Button from '../Button/Button';\r\nimport NavBar from '../NavBar/NavBar';\r\nimport { logoutUser } from '../../../store/actions/auth';\r\nimport './Toolbar.scss';\r\n\r\nconst Toolbar = ({\r\n    isAuthenticated,\r\n    search,\r\n    isFetching,\r\n    className,\r\n    onChangeInput,\r\n    searchMovies,\r\n    logoutUser\r\n}) => {\r\n    const onKeyDownHandler = e => {\r\n        if (e.key !== 'Enter' || !search) return;\r\n\r\n        searchMovies();\r\n    };\r\n\r\n    const toolbarClasses = ['toolbar'];\r\n\r\n    if (isAuthenticated && className) {\r\n        toolbarClasses.push(className);\r\n    }\r\n\r\n    return (\r\n        <div className={toolbarClasses.join(' ')}>\r\n            <div className=\"toolbar__wrapper\">\r\n                {\r\n                    isAuthenticated\r\n                        ? (\r\n                            <>\r\n                                <div className=\"toolbar__tools\">\r\n                                    <Input\r\n                                        label=\"I am searching...\"\r\n                                        name=\"search\"\r\n                                        className=\"toolbar__input\"\r\n                                        value={search}\r\n                                        onChange={onChangeInput}\r\n                                        onKeyDown={onKeyDownHandler}\r\n                                    />\r\n                    \r\n                                    <Button\r\n                                        className=\"button--orange\"\r\n                                        isDisabled={isFetching || !search}\r\n                                        onClick={searchMovies}\r\n                                    >\r\n                                        { isFetching ? 'Searching...' : 'Search' }\r\n                                    </Button>\r\n                                </div>\r\n                            \r\n                                <NavBar logoutUser={logoutUser} />\r\n                            </>\r\n                        )\r\n                        : <h1 className=\"toolbar__title\">Welcome to our Application!</h1>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nToolbar.propTypes = {\r\n    isAuthenticated: PT.bool.isRequired,\r\n    search: PT.string.isRequired,\r\n    isFetching: PT.bool.isRequired,\r\n    className: PT.string,\r\n    onChangeInput: PT.func.isRequired,\r\n    searchMovies: PT.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n    state => ({ isAuthenticated: !!state.auth.idToken }),\r\n    { logoutUser }\r\n)(Toolbar);\r\n","import React from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PT from 'prop-types';\r\n\r\nimport './Loader.scss';\r\n\r\nconst Loader = ({ type, toPortal = true }) => {\r\n    const loaderClasses = [\r\n        'fas',\r\n        'fa-spinner',\r\n        'loader',\r\n        `loader--${type}`\r\n    ];\r\n    \r\n    if (toPortal) {\r\n        return createPortal(\r\n            <i className={loaderClasses.join(' ')} />,\r\n            document.getElementById('modal-root')\r\n        );\r\n    }\r\n\r\n    return <i className={loaderClasses.join(' ')} />;\r\n};\r\n\r\nLoader.propTypes = {\r\n    type: PT.string.isRequired,\r\n    toPortal: PT.bool\r\n};\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nimport './Backdrop.scss';\r\n\r\nconst Backdrop = () => {\r\n    return createPortal(\r\n        <div className=\"backdrop\" />,\r\n        document.getElementById('modal-root')\r\n    );\r\n};\r\n\r\nexport default Backdrop;\r\n","import React from 'react';\r\nimport PT from 'prop-types';\r\n\r\nimport Toolbar from '../Toolbar/Toolbar';\r\nimport Footer from '../Footer/Footer';\r\nimport Loader from '../Loader/Loader';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\nimport './Layout.scss';\r\n\r\nconst Layout = ({\r\n    search,\r\n    isFetching,\r\n    onChangeInput,\r\n    searchMovies,\r\n    children\r\n}) => (\r\n    <div className=\"layout\">\r\n        <Toolbar\r\n            search={search}\r\n            isFetching={isFetching}\r\n            className=\"toolbar--sticky\"\r\n            onChangeInput={onChangeInput}\r\n            searchMovies={searchMovies}\r\n        />\r\n\r\n        <div className=\"layout__content\">\r\n            {children}\r\n            \r\n            {\r\n                isFetching &&\r\n                    <>\r\n                        <Backdrop />\r\n                        <Loader type=\"orange\" />\r\n                    </>\r\n            }\r\n        </div>\r\n\r\n        <Footer />\r\n    </div>\r\n);\r\n\r\nLayout.propTypes = {\r\n    search: PT.string.isRequired,\r\n    isFetching: PT.bool.isRequired,\r\n    onChangeInput: PT.func.isRequired,\r\n    searchMovies: PT.func.isRequired,\r\n    children: PT.oneOfType([\r\n        PT.object,\r\n        PT.arrayOf(PT.object)\r\n    ]).isRequired\r\n};\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\nimport PT from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Home.scss';\r\n\r\nconst Home = ({ movies }) => {\r\n    let content = (\r\n        <div className=\"home__container\">\r\n            <p className=\"home__text\">\r\n                There are no movies yet. Please, search them first!\r\n            </p>\r\n        </div>\r\n    );\r\n\r\n    if (movies.length) {\r\n        content = (\r\n            <div className=\"home__movies\">\r\n                {movies.map(({ id, original_title, poster_path }) => (\r\n                    <div\r\n                        key={id}\r\n                        className=\"home__movie\"\r\n                        style={{\r\n                            backgroundImage: `url(https://image.tmdb.org/t/p/w500${poster_path})`\r\n                        }}\r\n                    >\r\n                        <h1 className=\"home__title\">{original_title}</h1>\r\n\r\n                        <Link\r\n                            to={`/movies/${id}`}\r\n                            className=\"button button--blue home__link\"\r\n                        >\r\n                            Read More\r\n                        </Link>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <div className=\"home__wrapper\">\r\n                {content}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nHome.propTypes = {\r\n    movies: PT.arrayOf(PT.shape({\r\n        poster_path: PT.string,\r\n        id: PT.number.isRequired,\r\n        backdrop_path: PT.string,\r\n        original_title: PT.string.isRequired,\r\n        overview: PT.string.isRequired,\r\n        release_date: PT.string.isRequired\r\n    })).isRequired\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { v1 as uuid } from 'uuid';\r\nimport PT from 'prop-types';\r\n\r\nimport './Tooltip.scss';\r\n\r\nconst Tooltip = ({\r\n    content,\r\n    effect = 'solid',\r\n    place = 'top',\r\n    tooltipClass,\r\n    children\r\n}) => {\r\n    const uniqueId = uuid();\r\n\r\n    const tooltipClasses = ['tooltip'];\r\n\r\n    if (tooltipClass) {\r\n        tooltipClasses.push(tooltipClass);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <p\r\n                data-tip={content}\r\n                data-for={uniqueId}\r\n                data-effect={effect}\r\n                data-place={place}\r\n                data-class={tooltipClasses.join(' ')}\r\n                data-delay-hide={300}\r\n            >\r\n                {children}\r\n            </p>\r\n\r\n            <ReactTooltip id={uniqueId} />\r\n        </>\r\n    );\r\n};\r\n\r\nTooltip.propTypes = {\r\n    content: PT.string.isRequired,\r\n    effect: PT.oneOf(['solid', 'float']),\r\n    place: PT.oneOf(['top', 'bottom', 'left', 'right']),\r\n    tooltipClass: PT.string,\r\n    children: PT.oneOfType([\r\n        PT.object,\r\n        PT.arrayOf(PT.object)\r\n    ]).isRequired\r\n};\r\n\r\nexport default Tooltip;\r\n","import React from 'react';\r\nimport PT from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Tooltip from '../../../shared/components/Tooltip/Tooltip';\r\nimport './SimilarMovies.scss';\r\n\r\nconst SimilarMovies = ({ movies }) => (\r\n    <div className=\"similar-movies\">\r\n        <ul className=\"similar-movies__list\">\r\n            {movies.map(({ id, poster_path, original_title }) => (\r\n                <li key={id} className=\"similar-movies__list-item\">\r\n                    <Tooltip\r\n                        content={original_title}\r\n                        place=\"left\"\r\n                        tooltipClass=\"similar-movies__tooltip\"\r\n                    >\r\n                        <Link\r\n                            to={`/movies/${id}`}\r\n                            className=\"similar-movies__link\"\r\n                        >\r\n                            <img\r\n                                src={`https://image.tmdb.org/t/p/w500${poster_path}`}\r\n                                alt={original_title}\r\n                                className=\"similar-movies__img\"\r\n                            />\r\n                        </Link>\r\n                    </Tooltip>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    </div>\r\n);\r\n\r\nSimilarMovies.propTypes = {\r\n    movies: PT.arrayOf(PT.shape({\r\n        id: PT.number.isRequired,\r\n        original_title: PT.string.isRequired,\r\n        poster_path: PT.string\r\n    })).isRequired\r\n};\r\n\r\nexport default SimilarMovies;\r\n","import { create } from 'axios';\r\n\r\nexport const axiosAuth = create({\r\n    baseURL: 'https://identitytoolkit.googleapis.com'\r\n});\r\n\r\nexport const axiosDB = create({\r\n    // baseURL: 'https://movies-app-58adf.firebaseio.com'\r\n    baseURL: 'https://filmsapp-3e0dd.firebaseio.com'\r\n});\r\n\r\nexport const axiosMovies = create({\r\n    baseURL: 'https://api.themoviedb.org/3'\r\n});\r\n","import React, { Component } from 'react';\r\nimport PT from 'prop-types';\r\n\r\nimport Button from '../../shared/components/Button/Button';\r\nimport SimilarMovies from './SimilarMovies/SimilarMovies';\r\nimport { axiosMovies } from '../../shared/utils/axiosInstances';\r\nimport './FullMovie.scss';\r\n\r\nconst API_KEY = '1a67fd8fb5bbd9369d8ed3886f1ac2e2';\r\n\r\nclass FullMovie extends Component {\r\n    state = {\r\n        fullMovie: null,\r\n        similarMovies: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { match, movies } = this.props;\r\n        const { movieId } = match.params;\r\n\r\n        const fullMovie = movies.find(({ id }) => id === +movieId);\r\n\r\n        if (fullMovie) {\r\n            return this.fetchSimilarMovies(movieId)\r\n                .then(() => {\r\n                    this.setState({ fullMovie });\r\n                })\r\n                .catch(error => {\r\n                    console.log('[error]', error);\r\n                });\r\n        }\r\n\r\n        axiosMovies.get(`/movie/${movieId}?api_key=${API_KEY}&language=en-US`)\r\n            .then(response => {\r\n                const fullMovie = response.data;\r\n\r\n                if (!fullMovie) return;\r\n\r\n                this.fetchSimilarMovies(movieId)\r\n                    .then(() => {\r\n                        this.setState({ fullMovie });\r\n                    })\r\n                    .catch(error => {\r\n                        console.log('[error]', error);\r\n                    });\r\n            })\r\n            .catch(error => {\r\n                console.log('[error]', error);\r\n            });\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { movieId } = this.props.match.params;\r\n        const { movieId: prevMovieId } = prevProps.match.params;\r\n\r\n        if (movieId === prevMovieId) return;\r\n\r\n        axiosMovies.get(`/movie/${movieId}?api_key=${API_KEY}&language=en-US`)\r\n            .then(response => {\r\n                const fullMovie = response.data;\r\n\r\n                if (!fullMovie) return;\r\n\r\n                this.fetchSimilarMovies(movieId)\r\n                    .then(() => {\r\n                        this.setState({ fullMovie });\r\n                    })\r\n                    .catch(error => {\r\n                        console.log('[error]', error);\r\n                    });\r\n            })\r\n            .catch(error => {\r\n                console.log('[error]', error);\r\n            });\r\n    }\r\n\r\n    fetchSimilarMovies(movieId) {\r\n        return axiosMovies.get(`/movie/${movieId}/similar?api_key=${API_KEY}&language=en-US&page=1`)\r\n            .then(response => {\r\n                const { data } = response;\r\n\r\n                const similarMovies = data.results.slice(0, 3);\r\n\r\n                return this.setState({ similarMovies });\r\n            })\r\n            .catch(error => {\r\n                console.log('[error]', error);\r\n            });\r\n    }\r\n\r\n    // TODO: remove this crap\r\n    // addMovieToFavorite = movieId => {\r\n    //     console.log('[movieId]', movieId);\r\n    // }\r\n\r\n    manageFavoriteMovie = () => {\r\n        const { fullMovie } = this.state;\r\n        const { addMovieToFavorite, removeMovieFromFavorite, favoriteMovies } = this.props;\r\n\r\n        const favoriteMovie = favoriteMovies.find(m => m.id === fullMovie.id);\r\n\r\n        if (favoriteMovie) {\r\n            return removeMovieFromFavorite(favoriteMovie.databaseId);\r\n        }\r\n\r\n        addMovieToFavorite(fullMovie);\r\n    }\r\n\r\n    render() {\r\n        const { fullMovie, similarMovies } = this.state;\r\n        \r\n        if (!fullMovie) return null;\r\n\r\n        const { favoriteMovies } = this.props;\r\n    \r\n        const {\r\n            id,\r\n            poster_path,\r\n            backdrop_path,\r\n            original_title,\r\n            release_date,\r\n            overview\r\n        } = fullMovie;\r\n\r\n        const isFavorite = favoriteMovies.some(m => m.id === id);\r\n        const storageUrl = 'https://image.tmdb.org/t/p';\r\n\r\n        const btnClasses = ['full-movie__btn'];\r\n\r\n        if (isFavorite) {\r\n            btnClasses.push('button--red');\r\n        } else {\r\n            btnClasses.push('button--blue');\r\n        }\r\n    \r\n        return (\r\n            <div className=\"full-movie\">\r\n                <div\r\n                    key={id}\r\n                    className=\"full-movie__content\"\r\n                    style={{\r\n                        backgroundImage: `url(${storageUrl}/original${backdrop_path})`\r\n                    }}\r\n                >\r\n                    <div className=\"full-movie__body\">\r\n                        <div className=\"full-movie__img-wrapper\">\r\n                            <img\r\n                                src={`${storageUrl}/w500${poster_path}`}\r\n                                alt={original_title}\r\n                                className=\"full-movie__img\"\r\n                            />\r\n                        </div>\r\n    \r\n                        <div className=\"full-movie__info-wrapper\">\r\n                            <div className=\"full-movie__info\">\r\n                                <h1 className=\"full-movie__title\">{original_title}</h1>\r\n                                <strong className=\"full-movie__date\">{release_date}</strong>\r\n                                <p className=\"full-movie__text\">{overview}</p>\r\n                            </div>\r\n    \r\n                            <Button\r\n                                className={btnClasses.join(' ')}\r\n                                onClick={this.manageFavoriteMovie}\r\n                            >\r\n                                { isFavorite ? 'Remove from Favorite' : 'Add to Favorite' }\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n    \r\n                    <SimilarMovies movies={similarMovies} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nFullMovie.propTypes = {\r\n    match: PT.shape({\r\n        params: PT.object.isRequired\r\n    }).isRequired,\r\n    movies: PT.arrayOf(PT.shape({\r\n        poster_path: PT.string,\r\n        id: PT.number.isRequired,\r\n        backdrop_path: PT.string,\r\n        original_title: PT.string.isRequired,\r\n        overview: PT.string.isRequired,\r\n        release_date: PT.string.isRequired\r\n    })).isRequired,\r\n    favoriteMovies: PT.arrayOf(PT.shape({\r\n        poster_path: PT.string,\r\n        id: PT.number.isRequired,\r\n        backdrop_path: PT.string,\r\n        original_title: PT.string.isRequired,\r\n        overview: PT.string.isRequired,\r\n        release_date: PT.string.isRequired\r\n    })).isRequired,\r\n    addMovieToFavorite: PT.func.isRequired,\r\n    removeMovieFromFavorite: PT.func.isRequired\r\n};\r\n\r\nexport default FullMovie;\r\n","import React, { useEffect, useState, useCallback } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Input from '../../shared/components/Input/Input';\r\nimport Button from '../../shared/components/Button/Button';\r\nimport { axiosDB } from '../../shared/utils/axiosInstances';\r\nimport './Profile.scss';\r\n\r\nconst Profile = ({ databaseKey }) => {\r\n    const [ firstName, setFirstName ] = useState('');\r\n    const [ lastName, setLastName ] = useState('');\r\n    const [ age, setAge ] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (!databaseKey) return;\r\n\r\n        axiosDB.get(`users/${databaseKey}.json`)\r\n            .then(response => {\r\n                if (!response.data) return;\r\n\r\n                const { firstName, lastName, age } = response.data;\r\n\r\n                setFirstName(firstName);\r\n                setLastName(lastName);\r\n                setAge(age);\r\n            })\r\n            .catch(error => {\r\n                console.log('[error]', error);\r\n            });\r\n    }, [databaseKey]);\r\n\r\n    const onChangeHandler = e => {\r\n        const { name, value } = e.target;\r\n\r\n        if (name === 'firstName') {\r\n            return setFirstName(value);\r\n        }\r\n\r\n        if (name === 'lastName') {\r\n            return setLastName(value);\r\n        }\r\n\r\n        if (name === 'age') {\r\n            setAge(value);\r\n        }\r\n    };\r\n\r\n    const onSubmitHandler = useCallback(e => {\r\n        e.preventDefault();\r\n\r\n        //TODO: implement tihis!\r\n        console.log('SUBMITTED!');\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"profile\">\r\n            <form className=\"profile__form\">\r\n                <h1 className=\"profile__title\">Profile</h1>\r\n\r\n                <div className=\"profile__fields\">\r\n                    <Input\r\n                        wrapperClassName=\"profile__input-wrapper\"\r\n                        className=\"profile__input\"\r\n                        label=\"First name\"\r\n                        name=\"firstName\"\r\n                        value={firstName}\r\n                        onChange={onChangeHandler}\r\n                    />\r\n\r\n                    <Input\r\n                        wrapperClassName=\"profile__input-wrapper\"\r\n                        className=\"profile__input\"\r\n                        label=\"Last name\"\r\n                        name=\"lastName\"\r\n                        value={lastName}\r\n                        onChange={onChangeHandler}\r\n                    />\r\n\r\n                    <Input\r\n                        wrapperClassName=\"profile__input-wrapper\"\r\n                        className=\"profile__input\"\r\n                        label=\"Age\"\r\n                        name=\"age\"\r\n                        value={age}\r\n                        onChange={onChangeHandler}\r\n                    />\r\n                </div>\r\n\r\n                <Button\r\n                    className=\"button--orange profile__btn\"\r\n                    onClick={onSubmitHandler}\r\n                >\r\n                    Submit\r\n                </Button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(\r\n    state => ({ databaseKey: state.auth.databaseKey })\r\n)(Profile);\r\n","export const validation = {\r\n    isAlphabetic(value, pattern) {\r\n        if (pattern.test(value)) return null;\r\n\r\n        return 'Provided value should have alphabetic characters only.';\r\n    },\r\n    isNumeric(value, pattern) {\r\n        if (pattern.test(value)) return null;\r\n\r\n        return 'Provided value should have numeric characters only.';\r\n    },\r\n    isEmail(value, pattern) {\r\n        if (pattern.test(value)) return null;\r\n\r\n        return 'Provided value should be an email address.';\r\n    },\r\n    minLength(value, minValue) {\r\n        if (value.length >= minValue) return null;\r\n\r\n        return `Provided value should have minimum length of ${minValue}.`;\r\n    }\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Input from '../../shared/components/Input/Input';\r\nimport Button from '../../shared/components/Button/Button';\r\nimport { validation } from '../../shared/utils/validation';\r\nimport { authenticateUser } from '../../store/actions/auth';\r\nimport { axiosAuth, axiosDB } from '../../shared/utils/axiosInstances';\r\nimport './Auth.scss';\r\n\r\n// const FIREBASE_KEY = 'AIzaSyC3vTcNvrRtCGQAQwVF8fDuMCcwypi2feI';\r\nconst FIREBASE_KEY = 'AIzaSyAlF0fCe0MUJCEeCHN40oLADyTH7EBpyFo';\r\n\r\nconst SIGN_IN = 'Sign In';\r\nconst SIGN_UP = 'Sign Up';\r\n\r\nconst SIGN_IN_FIELDS = ['email', 'password'];\r\nconst SIGN_UP_FIELDS = ['firstName', 'lastName', 'age', 'email', 'password', 'confirmPassword'];\r\n\r\nconst initialState = {\r\n    mode: SIGN_IN,\r\n    firstName: {\r\n        type: 'text',\r\n        name: 'firstName',\r\n        label: 'First name',\r\n        value: '',\r\n        errors: [],\r\n        validationRules: {\r\n            isAlphabetic: /^[a-zA-Z]+$/\r\n        }\r\n    },\r\n    lastName: {\r\n        type: 'text',\r\n        name: 'lastName',\r\n        label: 'Last name',\r\n        value: '',\r\n        errors: [],\r\n        validationRules: {\r\n            isAlphabetic: /^[a-zA-Z]+$/\r\n        }\r\n    },\r\n    age: {\r\n        type: 'number',\r\n        name: 'age',\r\n        label: 'Age',\r\n        value: '',\r\n        errors: [],\r\n        validationRules: {\r\n            isNumeric: /^[0-9]+$/\r\n        }\r\n    },\r\n    email: {\r\n        type: 'email',\r\n        name: 'email',\r\n        label: 'E-mail',\r\n        value: '',\r\n        errors: [],\r\n        validationRules: {\r\n            isEmail: /^[a-z._\\-0-9]+@[a-z]+\\.[a-z]{2,3}$/\r\n        }\r\n    },\r\n    password: {\r\n        type: 'password',\r\n        name: 'password',\r\n        label: 'Password',\r\n        value: '',\r\n        errors: [],\r\n        validationRules: {\r\n            minLength: 6\r\n        }\r\n    },\r\n    confirmPassword: {\r\n        type: 'password',\r\n        name: 'confirmPassword',\r\n        label: 'Confirm password',\r\n        value: '',\r\n        errors: [],\r\n        validationRules: {\r\n            minLength: 6\r\n        }\r\n    }\r\n};\r\n\r\nclass Auth extends Component {\r\n    state = initialState;\r\n\r\n    onChangeHandler = e => {\r\n        const { name, value } = e.target;\r\n\r\n        this.setState({\r\n            [name]: {\r\n                ...this.state[name],\r\n                value\r\n            }\r\n        });\r\n    }\r\n\r\n    onBlurHandler = e => {\r\n        const { name } = e.target;\r\n\r\n        const errors = this.validate(this.state[name]);\r\n\r\n        this.setState({\r\n            [name]: {\r\n                ...this.state[name],\r\n                errors\r\n            }\r\n        });\r\n    }\r\n\r\n    validate(field) {\r\n        const { validationRules, value } = field;\r\n\r\n        const errors = [];\r\n\r\n        for (const ruleName in validationRules) {\r\n            const ruleValue = validationRules[ruleName];\r\n\r\n            const validationFunction = validation[ruleName];\r\n\r\n            const errorMessage = validationFunction(value.trim(), ruleValue);\r\n\r\n            if (!errorMessage) continue;\r\n\r\n            errors.push(errorMessage);\r\n        }\r\n\r\n        return errors;\r\n    }\r\n\r\n    onSubmitHandler = e => {\r\n        e.preventDefault();\r\n\r\n        const {\r\n            mode,\r\n            email,\r\n            password,\r\n            firstName,\r\n            lastName,\r\n            age\r\n        } = this.state;\r\n\r\n        const user = {\r\n            email: email.value,\r\n            password: password.value,\r\n            returnSecureToken: true\r\n        };\r\n\r\n        const url = mode === SIGN_IN ? 'signInWithPassword' : 'signUp';\r\n\r\n        axiosAuth.post(`v1/accounts:${url}?key=${FIREBASE_KEY}`, user)\r\n            .then(response => {\r\n                const { authenticateUser } = this.props;\r\n                const { idToken, localId, displayName } = response.data;\r\n\r\n                if (mode === SIGN_IN) {\r\n                    return authenticateUser(idToken, localId, displayName);\r\n                }\r\n\r\n                const userData = {\r\n                    firstName: firstName.value,\r\n                    lastName: lastName.value,\r\n                    age: +age.value\r\n                };\r\n\r\n                axiosDB.post('users.json', userData)\r\n                    .then(response => {\r\n                        const databaseKey = response.data.name;\r\n\r\n                        const updatedUserData = {\r\n                            idToken,\r\n                            displayName: databaseKey\r\n                        };\r\n\r\n                        axiosAuth.post(`v1/accounts:update?key=${FIREBASE_KEY}`, updatedUserData)\r\n                            .then(() => {\r\n                                authenticateUser(idToken, localId, databaseKey);\r\n                            });\r\n                    });\r\n            })\r\n            .catch(error => {\r\n                console.log('[error]', error);\r\n            });\r\n    }\r\n\r\n    switchModeHandler = newMode => {\r\n        const { mode } = this.state;\r\n        \r\n        if (mode === newMode) return;\r\n\r\n        this.setState({\r\n            ...initialState,\r\n            mode: newMode\r\n        });\r\n    }\r\n\r\n    formIsInvalid(mode) {\r\n        const fieldKeys = mode === SIGN_IN ? SIGN_IN_FIELDS : SIGN_UP_FIELDS;\r\n\r\n        let isValid = true;\r\n\r\n        for (const fieldKey of fieldKeys) {\r\n            const { errors, value } = this.state[fieldKey];\r\n\r\n            isValid = !errors.length && !!value && isValid;\r\n        }\r\n\r\n        return !isValid;\r\n    }\r\n\r\n    render() {\r\n        const { mode } = this.state;\r\n\r\n        const fieldKeys = mode === SIGN_IN ? SIGN_IN_FIELDS : SIGN_UP_FIELDS;\r\n\r\n        return (\r\n            <div className=\"auth\">\r\n                <div className=\"auth__form-wrapper\">\r\n                    <div className=\"auth__tabs\">\r\n                        {[SIGN_IN, SIGN_UP].map(authMode => {\r\n                            const tabClasses = ['auth__tab'];\r\n\r\n                            if (authMode === mode) {\r\n                                tabClasses.push('auth__tab--active');\r\n                            }\r\n\r\n                            return (\r\n                                <button\r\n                                    key={authMode}\r\n                                    type=\"button\"\r\n                                    className={tabClasses.join(' ')}\r\n                                    onClick={() => this.switchModeHandler(authMode)}\r\n                                >\r\n                                    {authMode}\r\n                                </button>\r\n                            );\r\n                        })}\r\n                    </div>\r\n\r\n                    <form\r\n                        className=\"auth__form\"\r\n                        autoComplete=\"off\"\r\n                        noValidate\r\n                        onSubmit={this.onSubmitHandler}\r\n                    >\r\n                        {fieldKeys.map(fieldKey => {\r\n                            const {\r\n                                type,\r\n                                name,\r\n                                label,\r\n                                value,\r\n                                errors\r\n                            } = this.state[fieldKey];\r\n\r\n                            return (\r\n                                <div key={fieldKey} className=\"auth__field-wrapper\">\r\n                                    <Input\r\n                                        type={type}\r\n                                        name={name}\r\n                                        label={label}\r\n                                        wrapperClassName=\"auth__input-wrapper\"\r\n                                        className=\"auth__input\"\r\n                                        value={value}\r\n                                        onChange={this.onChangeHandler}\r\n                                        onBlur={this.onBlurHandler}\r\n                                    />\r\n\r\n                                    {errors.map((error, i) => (\r\n                                        <p key={i} className=\"auth__error\">{error}</p>\r\n                                    ))}\r\n                                </div>\r\n                            );\r\n                        })}\r\n\r\n                        <Button\r\n                            type=\"submit\"\r\n                            className=\"button--orange auth__btn\"\r\n                            isDisabled={this.formIsInvalid(mode)}\r\n                        >\r\n                            Submit\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    { authenticateUser }\r\n)(Auth);\r\n","import React from 'react';\r\n\r\nimport './PageNotFound.scss';\r\n\r\nconst PageNotFound = () => (\r\n    <div className=\"page-not-found\">\r\n        <h1 className=\"page-not-found__title\">404</h1>\r\n        <p className=\"page-not-found__description\">PAGE NOT FOUND</p>\r\n    </div>\r\n);\r\n\r\nexport default PageNotFound;\r\n","import React from 'react';\r\nimport PT from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport Button from '../Button/Button';\r\nimport './Pagination.scss';\r\n\r\nconst Pagination = ({\r\n    className,\r\n    current,\r\n    total,\r\n    onClick\r\n}) => {\r\n    const numbers = [];\r\n    const max = Math.ceil(total / 5);\r\n    const maxCount = max < 5 ? max : 5;\r\n\r\n    if (current === 1) {\r\n        for (let i = current; i < maxCount; i++) {\r\n            numbers.push(i);\r\n        }\r\n\r\n        numbers.push(max);\r\n    } else if (current === 2) {\r\n        numbers.push(1);\r\n\r\n        for (let i = current; i < maxCount; i++) {\r\n            numbers.push(i);\r\n        }\r\n\r\n        numbers.push(max);\r\n    } else if (current === max - 1) {\r\n        numbers.push(1);\r\n        \r\n        for (let i = current - 2; i < maxCount + 2; i++) {\r\n            numbers.push(i);\r\n        }\r\n\r\n        numbers.push(max);\r\n    } else if (current === max) {\r\n        numbers.push(1);\r\n\r\n        for (let i = current - 3; i < maxCount + 2; i++) {\r\n            numbers.push(i);\r\n        }\r\n\r\n        numbers.push(max);\r\n    } else {\r\n        numbers.push(1, current - 1, current, current + 1, max);\r\n    }\r\n\r\n    return (\r\n        <div className={classNames('pagination', {\r\n            [className]: className\r\n        })}>\r\n            {numbers.map(n => (\r\n                <Button\r\n                    key={n}\r\n                    className={classNames('pagination__btn', {\r\n                        'pagination__btn--active': n === current\r\n                    })}\r\n                    onClick={() => onClick(n)}\r\n                >\r\n                    {n}\r\n                </Button>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nPagination.propTypes = {\r\n    className: PT.string,\r\n    current: PT.number.isRequired,\r\n    total: PT.number.isRequired,\r\n    onClick: PT.func.isRequired\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useState } from 'react';\r\nimport PT from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Button from '../../shared/components/Button/Button';\r\nimport Pagination from '../../shared/components/Pagination/Pagination';\r\nimport './FavoriteMovies.scss';\r\n\r\nconst FavoriteMovies = ({ movies }) => {\r\n    const [ currentPage, setCurrentPage ] = useState(1);\r\n\r\n    const switchPageHandler = page => {\r\n        setCurrentPage(page);\r\n    };\r\n\r\n    return (\r\n        <div className=\"favorite-movies\">\r\n            <table className=\"favorite-movies__table\">\r\n                <thead>\r\n                    <tr className=\"favorite-movies__tr\">\r\n                        <th className=\"favorite-movies__th\">ID</th>\r\n                        <th className=\"favorite-movies__th\">Image</th>\r\n                        <th className=\"favorite-movies__th\">Title</th>\r\n\r\n                        <th className=\"favorite-movies__th favorite-movies__th--overview\">\r\n                            Overview\r\n                        </th>\r\n\r\n                        <th className=\"favorite-movies__th\">Options</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    {movies\r\n                        .slice((currentPage - 1) * 5, currentPage * 5)\r\n                        .map(({ id, poster_path, original_title, overview }) => (\r\n                            <tr key={id} className=\"favorite-movies__tr\">\r\n                                <td className=\"favorite-movies__td\">\r\n                                    <Link\r\n                                        to={`/movies/${id}`}\r\n                                        className=\"favorite-movies__link\"\r\n                                    >\r\n                                        <i className=\"fas fa-link favorite-movies__icon\" />\r\n                                        <span className=\"favorite-movies__text\">{id}</span>\r\n                                    </Link>\r\n                                </td>\r\n                                \r\n                                <td className=\"favorite-movies__td\">\r\n                                    <div className=\"favorite-movies__img-wrapper\">\r\n                                        <img\r\n                                            src={`https://image.tmdb.org/t/p/w500${poster_path}`}\r\n                                            alt={original_title}\r\n                                            className=\"favorite-movies__img\"\r\n                                        />\r\n                                    </div>\r\n                                </td>\r\n\r\n                                <td className=\"favorite-movies__td\">{original_title}</td>\r\n\r\n                                <td className=\"favorite-movies__td favorite-movies__td--overview\">\r\n                                    {overview}\r\n                                </td>\r\n\r\n                                <td className=\"favorite-movies__td\">\r\n                                    <Button\r\n                                        className=\"button--red favorite-movies__btn\"\r\n                                    >\r\n                                        Remove\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n\r\n            <Pagination\r\n                className=\"favorite-movies__pagination\"\r\n                current={currentPage}\r\n                total={movies.length}\r\n                onClick={switchPageHandler}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nFavoriteMovies.propTypes = {\r\n    movies: PT.arrayOf(PT.shape({\r\n        id: PT.number.isRequired,\r\n        poster_path: PT.string,\r\n        original_title: PT.string.isRequired,\r\n        overview: PT.string.isRequired\r\n    })).isRequired\r\n};\r\n\r\nexport default FavoriteMovies;\r\n","import { axiosDB } from '../../shared/utils/axiosInstances';\r\nimport { ADD_MOVIE_TO_FAVORITE, REMOVE_MOVIE_FROM_FAVORITE, SAVE_FAVORITE_MOVIES } from '../actionTypes';\r\n\r\nconst addMovieToStore = movie => ({\r\n    type: ADD_MOVIE_TO_FAVORITE,\r\n    movie\r\n});\r\n\r\nexport const addMovieToFavorite = movie => {\r\n    return (dispatch, getState) => {\r\n        const { databaseKey } = getState().auth;\r\n\r\n        axiosDB.post(`/users/${databaseKey}/favoriteMovies.json`, movie)\r\n            .then(response => {\r\n                const { name } = response.data;\r\n\r\n                dispatch(addMovieToStore({\r\n                    ...movie,\r\n                    databaseId: name\r\n                }));\r\n            })\r\n            .catch(error => {\r\n                console.log('[error]', error);\r\n            });\r\n    };\r\n}\r\n\r\nexport const removeMovieFromStore = databaseId => ({\r\n    type: REMOVE_MOVIE_FROM_FAVORITE,\r\n    databaseId\r\n});\r\n\r\nexport const removeMovieFromFavorite = databaseId => {\r\n    return (dispatch, getState) => {\r\n        const { databaseKey } = getState().auth;\r\n\r\n        axiosDB.delete(`/users/${databaseKey}/favoriteMovies/${databaseId}.json`)\r\n            .then(() => {\r\n                dispatch(removeMovieFromStore(databaseId));\r\n            })\r\n            .catch(error => {\r\n                console.log('[error]', error);\r\n            });\r\n    };\r\n};\r\n\r\nexport const fetchFavoriteMovies = databaseKey => {\r\n    return dispatch => {\r\n        axiosDB.get(`/users/${databaseKey}/favoriteMovies.json`)\r\n            .then(response => {\r\n                const { data } = response;\r\n\r\n                if (!data) return;\r\n\r\n                const favoriteMovies = Object\r\n                    .entries(data)\r\n                    .map(([ databaseId, movieData ]) => ({\r\n                        ...movieData,\r\n                        databaseId\r\n                    }));\r\n\r\n                dispatch(saveFavoriteMovies(favoriteMovies));\r\n            })\r\n            .catch(error => {\r\n                console.log('[error]', error);\r\n            });\r\n    };\r\n};\r\n\r\nconst saveFavoriteMovies = movies => ({\r\n    type: SAVE_FAVORITE_MOVIES,\r\n    movies\r\n});\r\n","import React, { PureComponent } from 'react';\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport ErrorBoundary from './shared/components/ErrorBoundary/ErrorBoundary';\nimport Layout from './shared/components/Layout/Layout';\nimport Home from './pages/Home/Home';\nimport FullMovie from './pages/FullMovie/FullMovie';\nimport Profile from './pages/Profile/Profile';\nimport Auth from './pages/Auth/Auth';\nimport PageNotFound from './pages/PageNotFound/PageNotFound';\nimport FavoriteMovies from './pages/FavoriteMovies/FavoriteMovies';\nimport { authenticateUser } from './store/actions/auth';\nimport { fetchFavoriteMovies, addMovieToFavorite, removeMovieFromFavorite } from './store/actions/favoriteMovies';\nimport { axiosMovies } from './shared/utils/axiosInstances';\n\nconst API_KEY = '1a67fd8fb5bbd9369d8ed3886f1ac2e2';\n\nclass App extends PureComponent {\n    state = {\n        search: '',\n        movies: [],\n        isFetching: false\n    }\n\n    componentDidMount() {\n        const { authenticateUser, fetchFavoriteMovies } = this.props;\n\n        const idToken = localStorage.getItem('idToken');\n        const localId = localStorage.getItem('localId');\n        const databaseKey = localStorage.getItem('databaseKey');\n\n        const isAuthenticated = !!idToken && !!localId && !!databaseKey;\n\n        if (!isAuthenticated) {\n            localStorage.removeItem('idToken');\n            localStorage.removeItem('localId');\n            localStorage.removeItem('databaseKey');\n            return;\n        }\n\n        authenticateUser(idToken, localId, databaseKey);\n        this.fetchMovies('avengers');\n        fetchFavoriteMovies(databaseKey);\n    }\n\n    componentDidUpdate(prevProps) {\n        const { isAuthenticated, fetchFavoriteMovies, databaseKey } = this.props;\n\n        if (!prevProps.isAuthenticated && isAuthenticated) {\n            this.fetchMovies('avengers');\n            fetchFavoriteMovies(databaseKey);\n        }\n    }\n\n    onChangeInputHandler = e => {\n        const { name, value } = e.target;\n\n        this.setState({ [name]: value });\n    }\n\n    fetchMovies = (query, afterSuccessfulFetch) => {\n        this.setState({ isFetching: true });\n\n        axiosMovies.get(`/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1`)\n            .then(response => {\n                if (!response.data) return;\n\n                const movies = response.data.results;\n\n                setTimeout(() => {\n                    this.setState({ movies });\n                }, 1000);\n            })\n            .catch(error => {\n                console.log('[error]', error);\n            })\n            .finally(() => {\n                setTimeout(() => {\n                    this.setState({ isFetching: false });\n\n                    if (!afterSuccessfulFetch) return;\n\n                    afterSuccessfulFetch();\n                }, 1000);\n            });\n    }\n\n    searchMovies = () => {\n        const { search } = this.state;\n\n        if (!search) return;\n\n        const { history } = this.props;\n\n        this.fetchMovies(search, () => history.push('/'));\n    }\n\n    render() {\n        const { search, movies, isFetching } = this.state;\n        const { favoriteMovies, addMovieToFavorite, removeMovieFromFavorite } = this.props;\n\n        const idToken = localStorage.getItem('idToken');\n        const localId = localStorage.getItem('localId');\n\n        const isAuthenticated = !!idToken && !!localId;\n\n        return (\n            <ErrorBoundary>\n                <Layout\n                    search={search}\n                    isFetching={isFetching}\n                    onChangeInput={this.onChangeInputHandler}\n                    searchMovies={this.searchMovies}\n                >\n                    <Switch>\n                        {\n                            !isAuthenticated &&\n                                <>\n                                    <Route path=\"/auth\" component={Auth} />\n                                    <Redirect to=\"/auth\" />\n                                </>\n                        }\n\n                        <Route path=\"/\" exact render={() => (\n                            <Home movies={movies} />\n                        )} />\n\n                        <Route path=\"/movies/:movieId\" render={props => (\n                            <FullMovie\n                                {...props}\n                                movies={movies}\n                                favoriteMovies={favoriteMovies}\n                                addMovieToFavorite={addMovieToFavorite}\n                                removeMovieFromFavorite={removeMovieFromFavorite}\n                            />\n                        )} />\n\n                        <Route path=\"/favorite-movies\" render={() => (\n                            <FavoriteMovies movies={favoriteMovies} />\n                        )} />\n\n                        <Route path=\"/profile\" component={Profile} />\n                        <Route path=\"/404\" component={PageNotFound} />\n\n                        <Redirect from=\"/auth\" to=\"/\" />\n                        <Redirect to=\"/404\" />\n                    </Switch>\n                </Layout>\n            </ErrorBoundary>\n        );\n    }\n}\n\nexport default connect(\n    state => ({\n        isAuthenticated: !!state.auth.idToken,\n        databaseKey: state.auth.databaseKey,\n        favoriteMovies: state.favoriteMovies.movies\n    }),\n    {\n        authenticateUser,\n        fetchFavoriteMovies,\n        addMovieToFavorite,\n        removeMovieFromFavorite\n    }\n)(withRouter(App));\n","import { CHANGE_USER_NAME } from '../actionTypes';\r\n\r\nconst initialState = {\r\n    userName: 'John Doe',\r\n    userAge: 23\r\n};\r\n\r\nconst changeUserName = (state, payload) => ({\r\n    ...state,\r\n    userName: payload.newName\r\n});\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case CHANGE_USER_NAME: return changeUserName(state, payload);\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","import { ADD_MOVIE_TO_FAVORITE, REMOVE_MOVIE_FROM_FAVORITE, SAVE_FAVORITE_MOVIES } from '../actionTypes';\r\n\r\nconst initialState = {\r\n    movies: []\r\n};\r\n\r\nconst saveFavoriteMovies = (state, action) => ({\r\n    ...state,\r\n    movies: action.movies\r\n});\r\n\r\nconst addMovieToFavorite = (state, action) => ({\r\n    ...state,\r\n    movies: [...state.movies, action.movie]\r\n});\r\n\r\nconst removeMovieFromFavorite = (state, action) => ({\r\n    ...state,\r\n    movies: state.movies.filter(m => m.databaseId !== action.databaseId)\r\n});\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SAVE_FAVORITE_MOVIES: return saveFavoriteMovies(state, action);\r\n        case ADD_MOVIE_TO_FAVORITE: return addMovieToFavorite(state, action);\r\n        case REMOVE_MOVIE_FROM_FAVORITE: return removeMovieFromFavorite(state, action);\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","import { AUTHENTICATE_USER, LOGOUT_USER } from '../actionTypes';\r\n\r\nconst initialState = {\r\n    idToken: null,\r\n    localId: null,\r\n    databaseKey: null\r\n};\r\n\r\nconst authenticateUser = (state, action) => ({\r\n    ...state,\r\n    idToken: action.idToken,\r\n    localId: action.localId,\r\n    databaseKey: action.databaseKey\r\n});\r\n\r\nconst logoutUser = state => ({\r\n    ...state,\r\n    idToken: null,\r\n    localId: null,\r\n    databaseKey: null\r\n});\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case AUTHENTICATE_USER: return authenticateUser(state, action);\r\n        case LOGOUT_USER: return logoutUser(state);\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport profileReducer from './reducers/profile';\r\nimport favoriteMoviesReducer from './reducers/favoriteMovies';\r\nimport authReducer from './reducers/auth';\r\n\r\nexport default combineReducers({\r\n    profile: profileReducer,\r\n    favoriteMovies: favoriteMoviesReducer,\r\n    auth: authReducer\r\n});\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport App from './App';\nimport rootReducer from './store/rootReducer';\nimport * as serviceWorker from './serviceWorker';\nimport './index.scss';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <BrowserRouter>\n                <App />\n            </BrowserRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}